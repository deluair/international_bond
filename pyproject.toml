[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "international-bond-system"
version = "1.0.0"
description = "A comprehensive system for international bond relative value analysis and trading"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "International Bond System Team", email = "contact@internationalbond.com"}
]
maintainers = [
    {name = "International Bond System Team", email = "contact@internationalbond.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Topic :: Office/Business :: Financial :: Investment",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
]
keywords = ["finance", "bonds", "fixed-income", "trading", "risk-management", "portfolio-optimization"]
requires-python = ">=3.9"
dependencies = [
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "scipy>=1.10.0",
    "quantlib>=1.31",
    "matplotlib>=3.7.0",
    "plotly>=5.14.0",
    "seaborn>=0.12.0",
    "flask>=2.3.0",
    "dash>=2.10.0",
    "sqlalchemy>=2.0.0",
    "requests>=2.31.0",
    "yfinance>=0.2.0",
    "statsmodels>=0.14.0",
    "scikit-learn>=1.3.0",
    "pyyaml>=6.0",
    "python-dotenv>=1.0.0",
    "loguru>=0.7.0",
    "click>=8.1.0",
    "tqdm>=4.65.0",
    "rich>=13.4.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.4.0",
    "isort>=5.12.0",
    "pre-commit>=3.3.0",
    "bandit>=1.7.0",
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.1.0",
]
jupyter = [
    "jupyter>=1.0.0",
    "jupyterlab>=4.0.0",
    "ipywidgets>=8.0.0",
    "notebook>=7.0.0",
]
ml = [
    "tensorflow>=2.13.0",
    "torch>=2.0.0",
    "xgboost>=1.7.0",
    "lightgbm>=4.0.0",
]
web = [
    "streamlit>=1.25.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
]
all = [
    "international-bond-system[dev,docs,jupyter,ml,web]"
]

[project.scripts]
international-bond = "main:main"
bond-system = "main:main"
bond-analyzer = "main:analyze_mode"
bond-trader = "main:trading_mode"

[project.urls]
Homepage = "https://github.com/international-bond/bond-system"
Documentation = "https://international-bond-system.readthedocs.io/"
Repository = "https://github.com/international-bond/bond-system"
"Bug Tracker" = "https://github.com/international-bond/bond-system/issues"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json", "*.csv", "*.txt"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]
known_third_party = ["pandas", "numpy", "scipy", "matplotlib", "plotly", "flask", "dash"]

# MyPy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "quantlib.*",
    "yfinance.*",
    "quandl.*",
    "alpha_vantage.*",
    "fredapi.*",
    "bloomberg.*",
    "refinitiv.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "performance: marks tests as performance tests",
    "web: marks tests that require web interface",
    "data: marks tests that require external data",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Bandit security linter configuration
[tool.bandit]
exclude_dirs = ["tests", "test_*"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection_process_args

# Flake8 configuration (in setup.cfg since flake8 doesn't support pyproject.toml yet)
# See setup.cfg for flake8 configuration